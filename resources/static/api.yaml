openapi: 3.0.1
info:
  title: Elrond-Monitor API
  version: 1.0.0
paths:
  /stats:
    get:
      tags:
        - Network
      summary: Get blockchain stats
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  price:
                    type: number
                  price_change:
                    type: number
                  trading_volume:
                    type: number
                  cap:
                    type: number
                  cap_change:
                    type: number
                  circulating_supply:
                    type: number
                  total_supply:
                    type: number
                  height:
                    type: number
                  total_txs:
                    type: number
                  total_accounts:
                    type: number
  /stats/validators:
    get:
      tags:
        - Network
      summary: Get validator stats
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  active_stake:
                    type: number
                  validators:
                    type: number
                  observer_nodes:
                    type: number
                  staking_apr:
                    type: number
                  queue:
                    type: number
  /epoch:
    get:
      tags:
        - Network
      summary: Get epoch stats
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_round:
                    type: number
                  epoch_number:
                    type: number
                  nonce:
                    type: number
                  percent:
                    type: number
                  start:
                    type: number
                  left:
                    type: number
  /accounts:
    get:
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: limit
          required: false
          schema:
            type: number
      tags:
        - "Accounts"
      summary: get accounts
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        balance:
                          type: number
                        created_at:
                          type: number
                example: {
                  count: 150000, accounts: [{
                    address: "erd1v0kjtd6cl9zmjsjel3camkkduxdjvdlpxcg0hqz6t2ccq8vgfe9s9ffvj0",
                    balance: "200.5",
                    created_at: 1623945181,
                  }]}
        404:
          description: "Not found"
  /account/{address}:
    get:
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      tags:
        - "Accounts"
      summary: get account by address
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  balance:
                    type: number
                  delegated:
                    type: number
                  undelegated:
                    type: number
                  rewards_claimed:
                    type: number
                  claimable_rewards:
                    type: number
                  nonce:
                    type: number
                  staking_providers:
                    type: array
                    items:
                      type: string
                  created_at:
                    type: number
                example: {
                  address: "erd1v0kjtd6cl9zmjsjel3camkkduxdjvdlpxcg0hqz6t2ccq8vgfe9s9ffvj0",
                  balance: "200.5",
                  delegated: "20.5",
                  undelegated: "10.5",
                  rewards_claimed: "1.5",
                  claimable_rewards: "2.5",
                  nonce: 5,
                  staking_providers: ["erd1qqqqqqqqqqqqqpgqp699jngundfqw07d8jzkepucvpzush6k3wvqyc44rx"],
                  created_at: 1623945181,
                }
        404:
          description: "Not found"
  /transactions:
    get:
      parameters:
        - in: query
          name: address
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: limit
          required: false
          schema:
            type: number
      tags:
        - "Transactions"
      summary: get transactions, optionally by address
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/tx'
        404:
          description: "Not found"
  /transaction/{hash}:
    get:
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
      tags:
        - "Transactions"
      summary: get transaction by hash
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                  status:
                    type: string
                  from:
                    type: string
                  to:
                    type: string
                  value:
                    type: number
                  fee:
                    type: string
                  gas_used:
                    type: number
                  gas_price:
                    type: number
                  miniblock_hash:
                    type: string
                  timestamp:
                    type: number
                  type:
                    type: string
                  data:
                    type: string
                  scResults:
                    type: array
                    items:
                      type: object
                      properties:
                        from:
                          type: string
                        to:
                          type: string
                        value:
                          type: number
                        data:
                          type: string
                        message:
                          type: string
                example:
                  { hash: "66b8a1431feed937202f6210f11c58e8b8028d433bf9724a1d68e728cc793a1c",
                    status: "pending",
                    from: "erd16x7le8dpkjsafgwjx0e5kw94evsqw039rwp42m2j9eesd88x8zzs75tzry",
                    to: "erd1v0kjtd6cl9zmjsjel3camkkduxdjvdlpxcg0hqz6t2ccq8vgfe9s9ffvj0",
                    value: "0.000035",
                    fee: "0.000035",
                    gas_used: 5000000200,
                    gas_price: 1000000200,
                    miniblock_hash: "e51e2a60d7bb16ee587fe87a871f3de4840fe8bf152d3dc0d04deb94aff97692",
                    timestamp: 1623945181,
                    data: "input data",
                    scResults: {
                      from: "erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqq28llllsu54ydr",
                      to: "erd1kwl4vr0w46dvpq85ajcz9rqxjnyf93wqnmwhqztcu0pjnsmfvx9qxdavhh",
                      value: "2.0",
                      data: "@user error",
                      message: "total delegation cap reached"
                    }}
        404:
          description: "Not found"
  /blocks:
    get:
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: limit
          required: false
          schema:
            type: number
      tags:
        - "Blocks"
      summary: get blocks
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        hash:
                          type: string
                        nonce:
                          type: number
                        shard:
                          type: number
                        epoch:
                          type: number
                        tx_count:
                          type: string
                        timestamp:
                          type: number
              example:
                { count: 150000, items:[{ hash: "54a335f6a103a2e6dfca30f03c436451507a6f7efe6c3358199f55f449587110",
                                          nonce: 4646587,
                                          shard: 2,
                                          epoch: 322,
                                          tx_count: 4,
                                          timestamp: 1623945181 }]}
        404:
          description: "Not found"
  /block/{hash}:
    get:
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
      tags:
        - "Blocks"
      summary: get block by hash
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                  nonce:
                    type: number
                  shard:
                    type: number
                  epoch:
                    type: number
                  tx_count:
                    type: string
                  size:
                    type: number
                  proposer:
                    type: string
                  miniblocks:
                    type: array
                    items:
                      type: string
                  notarized_blocks_hashes:
                    type: array
                    items:
                      type: string
                  validators:
                    type: array
                    items:
                      type: string
                  pub_key_bitmap:
                    type: string
                  state_root_hash:
                    type: string
                  prev_hash:
                    type: string
                  timestamp:
                    type: number
                example:
                  { hash: "54a335f6a103a2e6dfca30f03c436451507a6f7efe6c3358199f55f449587110",
                    nonce: 4646587,
                    shard: 2,
                    epoch: 322,
                    tx_count: 4,
                    size: 1.345,
                    proposer: "0f30adff8a88862f1435a337e5dd6677e645a873543ece58e466ba1dd4b5be842fc999bacb515119c59e2f0a37fc16191dcffe8f2809d934d44b826e9ec2a86face1d1a96644a8c0ed0018903903702e45e1d6d45b97c5ce13dbb0d6e6752203",
                    miniblocks: ["07f535e699544bc171d70567fcc6b84dd41e14aa56fd6e31b3f6e92226b4b56f", "dbcf0355784973891ba7b71ce53453846a12eb86f159a1100981a4b0efba2705"],
                    notarized_blocks_hashes: ["1d70567fcc6b84dd41e", "dd41e14aa56fd6e31b3f6e9222"],
                    validators: ["1d70567fcc6b84dd41e", "dd41e14aa56fd6e31b3f6e9222"],
                    pub_key_bitmap: "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                    state_root_hash: "9ecc1267ec10202635dce406d6aa83870803c77cc677d107a6758bb9493ac9dc",
                    prev_hash: "bfa6d439a315e5c6bb8bcc51d6c227de726da7035bceb9913309c23641ccc66ebfa6d439a315e5c6bb8bcc51d6c227de726da7035bceb9913309c236",
                    timestamp: 1623945181 }
        404:
          description: "Not found"
  /block/{shard}/{nonce}:
    get:
      parameters:
        - in: path
          name: shard
          required: true
          schema:
            type: number
        - in: path
          name: nonce
          required: true
          schema:
            type: number
      tags:
        - "Blocks"
      summary: get block by shard and nonce
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                  nonce:
                    type: number
                  shard:
                    type: number
                  epoch:
                    type: number
                  tx_count:
                    type: string
                  size:
                    type: number
                  proposer:
                    type: string
                  miniblocks:
                    type: array
                    items:
                      type: string
                  notarized_blocks_hashes:
                    type: array
                    items:
                      type: string
                  validators:
                    type: array
                    items:
                      type: string
                  pub_key_bitmap:
                    type: string
                  state_root_hash:
                    type: string
                  prev_hash:
                    type: string
                  timestamp:
                    type: number
                example:
                  { hash: "54a335f6a103a2e6dfca30f03c436451507a6f7efe6c3358199f55f449587110",
                    nonce: 4646587,
                    shard: 2,
                    epoch: 322,
                    tx_count: 4,
                    size: 1.345,
                    proposer: "0f30adff8a88862f1435a337e5dd6677e645a873543ece58e466ba1dd4b5be842fc999bacb515119c59e2f0a37fc16191dcffe8f2809d934d44b826e9ec2a86face1d1a96644a8c0ed0018903903702e45e1d6d45b97c5ce13dbb0d6e6752203",
                    miniblocks: ["07f535e699544bc171d70567fcc6b84dd41e14aa56fd6e31b3f6e92226b4b56f", "dbcf0355784973891ba7b71ce53453846a12eb86f159a1100981a4b0efba2705"],
                    notarized_blocks_hashes: ["1d70567fcc6b84dd41e", "dd41e14aa56fd6e31b3f6e9222"],
                    validators: ["1d70567fcc6b84dd41e", "dd41e14aa56fd6e31b3f6e9222"],
                    pub_key_bitmap: "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                    state_root_hash: "9ecc1267ec10202635dce406d6aa83870803c77cc677d107a6758bb9493ac9dc",
                    prev_hash: "bfa6d439a315e5c6bb8bcc51d6c227de726da7035bceb9913309c23641ccc66ebfa6d439a315e5c6bb8bcc51d6c227de726da7035bceb9913309c236",
                    timestamp: 1623945181 }
        404:
          description: "Not found"
  /miniblock/{hash}:
    get:
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
      tags:
        - "Miniblocks"
      summary: get miniblock by hash
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                  shard_from:
                    type: number
                  shard_to:
                    type: number
                  block_sender:
                    type: string
                  block_receiver:
                    type: string
                  type:
                    type: string
                  txs:
                    type: array
                    items:
                      $ref: '#/components/schemas/tx'
                  timestamp:
                    type: number
                example:
                  { hash: "c4f9494ab2be10cc406d2e2592c16a2748306c91acbce9f85085bd4a85eccd00",
                    shard_from: "Shard 2",
                    shard_to: "Shard 2",
                    block_sender: "0b2e24f5471f4596f471c99ab32464b4ce28ac3b471005f6040de7f23e1f03870b2e24f5471f4596f471c99ab32464b4ce28ac3b",
                    block_receiver: "0b2e24f5471f4596f471c99ab32464b4ce28ac3b471005f6040de7f23e1f03870b2e24f5471f4596f471c99ab32464b4ce28ac3b",
                    type: "TxBlock",
                    txs: [{ hash: "946def034e4bbb47d9669ceeaf180314171440f9e8ab6d46d843ddc091382fd8",
                            status: "pending",
                            shard_from: 0,
                            shard_to: 2,
                            from: "erd1xvmata3rkwmp4h4jxr5ngzzq2zm0p2ev6672xvj3mpmvj2zwlttq87uh9q",
                            to: "erd1c8v53mcdesz2svpmvglcc0rzgp0j4ckly3ge6fph43eqr49x3ntqx8jngl",
                            value: 0,
                            timestamp: 1623945181 }],
                    timestamp: 1623945181 }
        404:
          description: "Not found"
  /stake/events:
    get:
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: limit
          required: false
          schema:
            type: number
        - in: query
          name: validator
          required: false
          schema:
            type: string
        - in: query
          name: delegator
          required: false
          schema:
            type: string
      tags:
        - "Staking"
      summary: get block by hash
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        tx_hash:
                          type: string
                        type:
                          type: string
                        validator:
                          type: string
                        delegator:
                          type: string
                        epoch:
                          type: number
                        amount:
                          type: number
                        created_at:
                          type: number
                      example:
                        { tx_hash: "54a335f6a103a2e6dfca30f03c436451507a6f7efe6c3358199f55f449587110",
                          type: "delegate",
                          validator: "erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqphllllsndz99p",
                          delegator: "erd1nly3kcxggphf78d3aqmne5amp0zgwmx7glq2d9p50l3krmqk3trq7e2fld",
                          amount: 123,
                          created_at: 1627476960 }
        404:
          description: "Not found"
  /staking/providers:
    get:
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: limit
          required: false
          schema:
            type: number
      tags:
        - "Staking"
      summary: get all staking providers
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/staking_provider'
        404:
          description: "Not found"
  /staking/provider/{address}:
    get:
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      tags:
        - "Staking"
      summary: get staking provider
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/staking_provider'
        404:
          description: "Not found"
  /nodes:
    get:
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: limit
          required: false
          schema:
            type: number
        - in: query
          name: identity
          required: false
          schema:
            type: string
        - in: query
          name: provider
          required: false
          schema:
            type: string
        - in: query
          name: sort_by
          required: false
          schema:
            type: string
            enum: [online, shard]
        - in: query
          name: desc
          required: false
          schema:
            type: boolean
      tags:
        - "Staking"
      summary: get nodes
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/node'
        404:
          description: "Not found"
  /node/{key}:
    get:
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      tags:
        - "Staking"
      summary: get node information
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/node'
        404:
          description: "Not found"
  /validators:
    get:
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: limit
          required: false
          schema:
            type: number
      tags:
        - "Staking"
      summary: get validators
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/validator'
        404:
          description: "Not found"
  /validator/{identity}:
    get:
      parameters:
        - in: path
          name: identity
          required: true
          schema:
            type: string
      tags:
        - "Staking"
      summary: get validator information
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validator'
        404:
          description: "Not found"
  /validators/map:
    get:
      tags:
        - Statistics
      summary: Get map of validators
      responses:
        200:
          description: "Success"
  /providers/ranking:
    get:
      tags:
        - "Statistics"
      summary: get providers ranking
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
                    t_100:
                      type: object
                      properties:
                        amount:
                          type: number
                        Count:
                          type: number
                    f_100_t_1k:
                      type: object
                      properties:
                        amount:
                          type: number
                        Count:
                          type: number
                    f_1k_t_10k:
                      type: object
                      properties:
                        amount:
                          type: number
                        Count:
                          type: number
                    f_10k_t_100k:
                      type: object
                      properties:
                        amount:
                          type: number
                        Count:
                          type: number
                    f_100k:
                      type: object
                      properties:
                        amount:
                          type: number
                        Count:
                          type: number
        404:
          description: "Not found"
  /accounts/range:
    get:
      tags:
        - Statistics
      summary: Get daily total accounts
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: number
        - in: query
          name: from
          required: false
          schema:
            type: number
        - in: query
          name: to
          required: false
          schema:
            type: number
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeData'
  /transactions/range:
    get:
      tags:
        - Statistics
      summary: Get daily total transactions
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: number
        - in: query
          name: from
          required: false
          schema:
            type: number
        - in: query
          name: to
          required: false
          schema:
            type: number
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeData'
  /price/range:
    get:
      tags:
        - Statistics
      summary: Get daily price
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: number
        - in: query
          name: from
          required: false
          schema:
            type: number
        - in: query
          name: to
          required: false
          schema:
            type: number
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeData'
  /stake/range:
    get:
      tags:
        - Statistics
      summary: Get daily total stake
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: number
        - in: query
          name: from
          required: false
          schema:
            type: number
        - in: query
          name: to
          required: false
          schema:
            type: number
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeData'
  /delegators/range:
    get:
      tags:
        - Statistics
      summary: Get daily total delegators
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: number
        - in: query
          name: from
          required: false
          schema:
            type: number
        - in: query
          name: to
          required: false
          schema:
            type: number
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rangeData'
components:
  schemas:
    tx:
      type: object
      properties:
        hash:
          type: string
        status:
          type: string
        shard_from:
          type: number
        shard_to:
          type: number
        from:
          type: string
        to:
          type: string
        value:
          type: number
        fee:
          type: number
        type:
          type: string
        gas_used:
          type: number
        miniblock_hash:
          type: string
        timestamp:
          type: number
      example:
        { hash: "66b8a1431feed937202f6210f11c58e8b8028d433bf9724a1d68e728cc793a1c",
          status: "pending",
          shard_from: 1,
          shard_to: 2,
          from: "erd16x7le8dpkjsafgwjx0e5kw94evsqw039rwp42m2j9eesd88x8zzs75tzry",
          to: "erd1v0kjtd6cl9zmjsjel3camkkduxdjvdlpxcg0hqz6t2ccq8vgfe9s9ffvj0",
          value: "0.000035",
          fee: "0.000035",
          miniblock_hash: "d9a9d31b0553c4d40a62b8e0fe9a8cf603d8d0eff3d609a40e44b361bbb5a659",
          timestamp: 1623945181 }
    validator:
      type: object
      properties:
        identity:
          type: string
        name:
          type: string
        description:
          type: string
        avatar:
          type: string
        score:
          type: number
        locked:
          type: number
        stake:
          type: number
        stake_percent:
          type: number
        top_up:
          type: number
        validators:
          type: number
        providers:
          type: array
          items:
            type: string
    staking_provider:
      type: object
      properties:
        provider:
          type: string
        service_fee:
          type: number
        delegation_cap:
          type: number
        apr:
          type: number
        num_users:
          type: number
        cumulated_rewards:
          type: number
        identity:
          type: string
        name:
          type: string
        num_nodes:
          type: string
        stake:
          type: number
        top_up:
          type: number
        locked:
          type: number
        featured:
          type: boolean
        validator:
          type: object
          properties:
            name:
              type: string
            locked:
              type: number
            stake_percent:
              type: number
            nodes:
              type: number
    node:
      type: object
      properties:
        tx_hash:
          type: string
        type:
          type: string
        status:
          type: string
        owner:
          type: string
        provider:
          type: string
        stake:
          type: number
        topUp:
          type: number
        locked:
          type: number
        position:
          type: number
        upTime:
          type: number
        downTime:
          type: number
    rangeData:
      type: array
      items:
        type: object
        properties:
          value:
            type: number
          time:
            type: number
    success:
      type: object
      properties:
        message:
          type: string
      example:
        message: success